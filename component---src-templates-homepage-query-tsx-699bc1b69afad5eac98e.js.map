{"version":3,"sources":["webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/construct.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://mklabs.github.io/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://mklabs.github.io/./node_modules/@lekoarts/gatsby-theme-emma/src/components/bg-image.tsx","webpack://mklabs.github.io/./node_modules/@lekoarts/gatsby-theme-emma/src/components/hero.tsx","webpack://mklabs.github.io/./src/components/item-tags.tsx","webpack://mklabs.github.io/./src/components/blog-list-item.tsx","webpack://mklabs.github.io/./src/components/listing.tsx","webpack://mklabs.github.io/./src/components/project-item.tsx","webpack://mklabs.github.io/./src/components/projects.tsx","webpack://mklabs.github.io/./src/components/homepage.tsx","webpack://mklabs.github.io/./src/templates/homepage-query.tsx","webpack://mklabs.github.io/./src/utils/replaceSlashes.ts","webpack://mklabs.github.io/./node_modules/gatsby-plugin-mdx/index.js","webpack://mklabs.github.io/./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","Object","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","children","color","slim","colorMode","useColorMode","theme","useThemeUI","bg","colors","background","modes","dark","shade","rgba","sx","width","height","maxHeight","zIndex","position","filter","paddingBottom","content","left","top","mixBlendMode","backfaceVisibility","image","overflow","fluid","tags","useMinimalBlogConfig","tagsPath","basePath","map","tag","key","slug","as","Link","to","replaceSlashes","post","showTags","postsPrefix","mb","fontSize","title","mt","date","posts","className","node","style","projectsPrefix","display","paddingTop","opacity","padding","transition","textDecoration","cover","childImageSharp","aria-label","alt","src","tracedSVG","right","bottom","objectFit","backgroundColor","fontWeight","client","service","isBrowser","window","categories","label","href","id","projects","hash","location","defaultCategory","find","category","useState","selected","setSelected","project","toLowerCase","trail","useTrail","variant","textAlign","data-testid","mx","onClick","preventDefault","onCategoryClick","gridTemplateColumns","justifyContent","maxWidth","index","props","page","data","blogPath","titleProps","useSpring","config","transform","contentProps","delay","margin","flexDirection","MDXRenderer","body","text","pb","EmmaCoreProjects","allProject","allPost","nodes","input","replace","require","React","mdx","useMDXScope","scope","mdxScope","End","fullScope","keys","values","fn"],"mappings":"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","file":"component---src-templates-homepage-query-tsx-699bc1b69afad5eac98e.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, useColorMode, useThemeUI } from \"theme-ui\"\nimport { rgba } from \"polished\"\n\ntype BGImageProps = { children: React.ReactNode; color?: string; slim: boolean }\n\nconst BGImage = ({ children, color = ``, slim }: BGImageProps) => {\n  const [colorMode] = useColorMode()\n  const { theme } = useThemeUI()\n\n  const bg = colorMode === `light` ? theme!.colors!.background : theme!.colors!.modes!.dark.background\n  const shade = rgba(bg, 0.4)\n\n  return (\n    <div\n      sx={{\n        width: `100%`,\n        height: slim ? [`400px`, `500px`] : [`500px`, `600px`, `700px`, `40vw`],\n        maxHeight: `1200px`,\n        zIndex: 1,\n        \".gatsby-image-wrapper\": {\n          position: `static !important`,\n          filter: `grayscale(100%)`,\n          \"> div\": {\n            paddingBottom: `0 !important`,\n            height: slim\n              ? [`400px !important`, `500px !important`]\n              : [`500px !important`, `600px !important`, `700px !important`, `40vw !important`],\n            maxHeight: `1200px`,\n          },\n        },\n        \"&:before\": {\n          content: `\"\"`,\n          height: `100%`,\n          left: 0,\n          top: 0,\n          position: `absolute`,\n          width: `100%`,\n          mixBlendMode: colorMode === `light` ? `overlay` : `soft-light`,\n          zIndex: 2,\n          background: color ? `linear-gradient(to top, rgba(0, 0, 0, 0) 0%, ${rgba(color!, 1)} 100%)` : null,\n        },\n        \"&:after\": {\n          backfaceVisibility: `hidden`,\n          content: `\"\"`,\n          height: `100%`,\n          left: 0,\n          top: 0,\n          position: `absolute`,\n          width: `100%`,\n          background: `linear-gradient(to bottom, ${shade} 0%, ${bg} 100%),\n      linear-gradient(135deg, ${shade} 40%, ${bg} 100%), linear-gradient(-135deg, ${shade} 40%, ${bg} 100%)`,\n        },\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default BGImage\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\nimport Img from \"gatsby-image\"\nimport BGImage from \"./bg-image\"\n\ntype HeroProps = {\n  children: React.ReactNode\n  color?: string\n  slim?: boolean\n  image: {\n    aspectRatio: number\n    src: string\n    srcSet: string\n    sizes: string\n    base64: string\n    tracedSVG: string\n    srcWebp: string\n    srcSetWebp: string\n  }\n}\n\nconst Hero = ({ children, color = ``, image, slim = false }: HeroProps) => (\n  <section\n    sx={{\n      position: `relative`,\n      height: slim ? [`400px`, `500px`] : [`500px`, `600px`, `700px`, `40vw`],\n      maxHeight: `1200px`,\n      width: `100%`,\n      overflow: `hidden`,\n    }}\n  >\n    <BGImage color={color} slim={slim}>\n      <Img fluid={image} />\n    </BGImage>\n    {children}\n  </section>\n)\n\nexport default Hero\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype BlogListItemProps = {\n    post: {\n        slug: string\n        title: string\n        date: string\n        excerpt: string\n        description: string\n        timeToRead?: number\n        tags?: {\n            name: string\n            slug: string\n        }[]\n    }\n    showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => {\n\n  const { postsPrefix, basePath } = useMinimalBlogConfig()\n\n\n    return (\n        <Box mb={4}>\n            <TLink as={Link} to={replaceSlashes(`/${basePath}/${postsPrefix}/${post.slug}`)} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n                {post.title}\n            </TLink>\n            <p sx={{ color: `textMuted`, mt: 1, a: { color: `primary` }, fontSize: [1, 1, 2] }}>\n                <time>{post.date}</time>\n                {post.tags && showTags && (\n                    <React.Fragment>\n                        {` — `}\n                        <ItemTags tags={post.tags} />\n                    </React.Fragment>\n                )}\n            </p>\n        </Box>\n    )\n}\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { animated } from \"react-spring\"\nimport { ChildImageSharp } from \"@lekoarts/gatsby-theme-emma/src/types\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype ProjectItemProps = {\n    node: {\n        color: string\n        title: string\n        slug: string\n        service: string\n        client: string\n        cover: ChildImageSharp\n    }\n    style: any\n}\n\nconst ProjectItem = ({ node, style }: ProjectItemProps) => {\n\n    const { projectsPrefix, basePath } = useMinimalBlogConfig()\n\n    return (\n        <animated.div\n            sx={{\n                position: `relative`,\n                \"&:before\": {\n                    content: `\"\"`,\n                    display: `block`,\n                    paddingTop: `100%`,\n                },\n            }}\n            style={style}\n        >\n            <div\n                sx={{\n                    left: 0,\n                    height: `100%`,\n                    position: `absolute`,\n                    top: 0,\n                    width: `100%`,\n                    a: {\n                        color: `white`,\n                        height: `100%`,\n                        left: 0,\n                        opacity: 0,\n                        padding: 4,\n                        position: `absolute`,\n                        top: 0,\n                        width: `100%`,\n                        zIndex: 10,\n                        transition: `all 0.3s ease-in-out`,\n                        textDecoration: `none`,\n                        \"&:hover\": {\n                            color: `white`,\n                            opacity: 1,\n                            textDecoration: `none`,\n                        },\n                    },\n                }}\n            >\n                <div\n                    sx={{\n                        \"> div\": {\n                            height: `100%`,\n                            left: 0,\n                            position: `absolute !important`,\n                            top: 0,\n                            width: `100%`,\n                            \"> div\": {\n                                position: `static !important`,\n                            },\n                        },\n                    }}\n                >\n                    <Img fluid={node.cover.childImageSharp.fluid} />\n                </div>\n                <Link \n                    aria-label={`View detail page of ${node.title}`}\n                    to={replaceSlashes(`/${basePath}/${projectsPrefix}/${node.slug}`)}\n                >\n                    <img\n                        alt=\"\"\n                        src={node.cover.childImageSharp.fluid.tracedSVG}\n                        sx={{\n                            position: `absolute`,\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            width: `100%`,\n                            height: `100%`,\n                            filter: `invert(100%)`,\n                            zIndex: -1,\n                            opacity: 0.08,\n                            objectFit: `cover`,\n                        }}\n                    />\n                    <div\n                        sx={{\n                            backgroundColor: node.color,\n                            height: `100%`,\n                            left: 0,\n                            position: `absolute`,\n                            top: 0,\n                            width: `100%`,\n                            zIndex: -2,\n                        }}\n                    />\n                    <div sx={{ fontSize: 5, fontWeight: `bold` }}>{node.client}</div>\n                    <div sx={{ fontSize: 2 }}>{node.service}</div>\n                </Link>\n            </div>\n        </animated.div>\n    )\n}\n\nexport default ProjectItem\n","/** @jsx jsx */\nimport React, { useState } from \"react\"\nimport { jsx, Heading, Container, Link } from \"theme-ui\"\nimport { ChildImageSharp } from \"@lekoarts/gatsby-theme-emma/src/types\"\nimport { useTrail } from \"react-spring\"\nimport ProjectItem from \"./project-item\"\n\nconst isBrowser = typeof window !== \"undefined\"\n\ntype ProjectsProps = {\n    projects: {\n        color: string\n        slug: string\n        title: string\n        service: string\n        client: string\n        category: string\n        cover: ChildImageSharp\n    }[]\n    [key: string]: any\n}\n\nconst categories = [\n    {\n        label: \"All Categories\",\n        content: \"All\",\n        href: \"/portfolio#all\",\n        id: \"all\"\n    },\n    {\n        label: \"Game Development\",\n        content: \"Game Development\",\n        href: \"/portfolio#gamedev\",\n        id: \"gamedev\"\n    },\n    {\n        label: \"Modding\",\n        content: \"Modding\",\n        href: \"/portfolio#modding\",\n        id: \"modding\"\n    },\n    // {\n    //     label: \"Open Source Software\",\n    //     content: \"OSS\",\n    //     href: \"/portfolio#oss\",\n    //     id: \"oss\"\n    // }\n]\n\nconst Projects = ({ projects }: ProjectsProps) => {\n    const hash = isBrowser ? location.hash.slice(1) : \"\"\n    const defaultCategory = categories.find(category => hash === category.id)\n    const [selected, setSelected] = useState(defaultCategory ? defaultCategory.id : \"gamedev\");\n\n    if (selected !== \"all\") {\n        projects = projects.filter(project => project.category.toLowerCase() === selected)\n    }\n\n    const trail = useTrail(projects.length, {\n        from: { height: `0%` },\n        to: { height: `100%` },\n    })\n\n    const onCategoryClick = (e, id) => {\n        setSelected(id)\n        location.hash = id\n        e.preventDefault()\n    }\n\n    return (\n        <React.Fragment>\n            <Container>\n                <Heading as=\"h2\" variant=\"styles.h2\" sx={{ textAlign: 'center' }}>\n                    Projects\n                </Heading>\n\n                <div data-testid=\"projects-categories\" sx={{ mt: 4, a: { mx: 2 }, textAlign: 'center' }}>\n                    {categories.map((category) => (\n                        <Link\n                            key={category.id}\n                            aria-label={category.label}\n                            title={category.label}\n                            href={category.href}\n                            onClick={(e) => onCategoryClick(e, category.id)}\n                            sx={{ \n                                color: \"primary\",\n                                fontWeight: category.id === selected ? 700 : \"normal\"\n                            }}\n                        >\n                            {category.content}\n                        </Link>\n                    ))}\n                </div>\n            </Container>\n\n            <Container\n                sx={{\n                    display: `grid`,\n                    gridTemplateColumns: `repeat(auto-fit, minmax(280px, 20%))`,\n                    justifyContent: `center`,\n                    width: `100%`,\n                    maxWidth: `100%`,\n                    padding: `2rem 0`\n\n                }}\n            >\n                {trail.map((style, index) => (\n                    <ProjectItem style={style} node={projects[index]} key={projects[index].slug} />\n                ))}\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Projects","/** @jsx jsx */\nimport { jsx, Flex, Heading, Container } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { animated, useSpring, useTrail, config } from \"react-spring\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"@lekoarts/gatsby-theme-emma/src/components/layout\"\nimport { ChildImageSharp } from \"@lekoarts/gatsby-theme-emma/src/types\"\nimport Hero from \"@lekoarts/gatsby-theme-emma/src/components/hero\"\nimport SEO from \"@lekoarts/gatsby-theme-emma/src/components/seo\"\nimport Projects from \"./projects\"\nimport Listing from \"./listing\"\nimport Title from \"./title\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype ProjectsProps = {\n    projects: {\n        color: string\n        slug: string\n        title: string\n        service: string\n        client: string\n        cover: ChildImageSharp\n        category: string\n    }[]\n\n    posts: {\n        slug: string\n        title: string\n        date: string\n        excerpt: string\n        description: string\n        timeToRead?: number\n        tags?: {\n            name: string\n            slug: string\n        }[]\n    }[]\n\n    [key: string]: any\n}\n\nconst Homepage = (props: ProjectsProps) => {\n    const { projects, posts, data: { page } } = props\n\n    const { basePath, blogPath } = useMinimalBlogConfig()\n\n    const trail = useTrail(projects.length, {\n        from: { height: `0%` },\n        to: { height: `100%` },\n    })\n\n    const titleProps = useSpring({\n        config: config.slow,\n        from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n        to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n    })\n\n    const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n    return (\n        <Layout\n            sx={{\n                width: `100%`,\n            }}\n        >\n            <SEO title=\"Home\" />\n\n            <Hero image={page.cover.childImageSharp.fluid} slim>\n                <Flex\n                    sx={{\n                        position: `absolute`,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        maxWidth: `5xl`,\n                        margin: `0 auto`,\n                        height: '800px',\n                        padding: 4,\n                        zIndex: 2,\n                        flexDirection: `column`,\n                    }}\n                >\n                </Flex>\n            </Hero>\n\n\n            <Container>\n                <animated.div style={titleProps}>\n                    <Heading as=\"h1\" variant=\"page.heading\" sx={{ textAlign: 'center', position: 'absolute', top: '-100px' }}>\n                        Hi, I'm Mickael.\n                    </Heading>\n                </animated.div>\n                <animated.div style={contentProps}>\n                    <MDXRenderer>{page.body}</MDXRenderer>\n                </animated.div>\n            </Container>\n\n            <Projects projects={projects} />\n\n            <Container>\n                <Title text=\"Latest Posts\">\n                    <Link \n                        to={replaceSlashes(`/${basePath}/${blogPath}`)}\n                    >\n                        Read all posts\n                    </Link>\n                </Title>\n\n                {/* <Heading as=\"h2\" variant=\"styles.h2\" sx={{ textAlign: 'center' }}>\n                    Latest Posts\n                </Heading> */}\n\n                <div data-testid=\"projects-categories\" sx={{ mt: 4, pb: '2rem', a: { mx: 2 }, textAlign: 'center' }}>\n                    {/* <Link \n                        sx={{ color: 'primary', textDecoration: 'none' }}\n                        to={replaceSlashes(`/${basePath}/${blogPath}`)}\n                    >\n                        Read all posts\n                    </Link> */}\n\n                    {/* {categories.map((category) => (\n                        <Link\n                            key={category.id}\n                            aria-label={category.label}\n                            title={category.label}\n                            href={category.href}\n                            onClick={(e) => onCategoryClick(e, category.id)}\n                            sx={{ \n                                color: \"primary\",\n                                fontWeight: category.id === selected ? 700 : \"normal\"\n                            }}\n                        >\n                            {category.content}\n                        </Link>\n                    ))} */}\n                </div>\n\n                <Listing posts={posts} showTags={false} />\n            </Container>\n\n        </Layout >\n    )\n}\n\nexport default Homepage","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Homepage from \"../components/homepage\"\n\ntype Props = {\n        data: {\n                allProject: any\n                allPost: any\n                [key: string]: string\n        }\n        [key: string]: any\n}\n\nexport default function EmmaCoreProjects({ ...props }: Props) {\n        const {\n                data: { allProject, allPost },\n        } = props\n\n        return <Homepage projects={allProject.nodes} posts={allPost.nodes} {...props} />\n}\n\nexport const query = graphql`\n    query($formatString: String!) {\n        allProject: allPortfolioProject(sort: {fields: [order, date], order: [ASC, DESC]}) {\n            nodes {\n                color\n                slug\n                service\n                client\n                title\n                category\n                cover {\n                    childImageSharp {\n                        fluid(maxWidth: 850, quality: 90, traceSVG: { color: \"#e6e6e6\" }) {\n                            ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                        }\n                    }\n                }\n            }\n        }\n\n        allPost(sort: { fields: date, order: DESC }, limit: 3) {\n            nodes {\n              slug\n              title\n              date(formatString: $formatString)\n              excerpt\n              timeToRead\n              description\n              tags {\n                name\n                slug\n              }\n            }\n        }\n\n        page(slug: { eq: \"/about\" }) {\n                title\n                slug\n                excerpt\n                body\n                cover {\n                    childImageSharp {\n                        fluid(maxWidth: 1920, quality: 90) {\n                            ...GatsbyImageSharpFluid_withWebp\n                        }\n                    }\n                }\n        }\n    }\n`","/**\n * Replace double slashes // with one slash /\n * @description This prevents double slashes as users might add e.g. the basePath as \"/blog\" or \"blog\"\n * @param input\n * @return {string} - Sanitized string\n */\nfunction replaceSlashes(input: string): string {\n  return input.replace(/\\/\\/+/g, `/`)\n}\n\nexport default replaceSlashes\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n"],"sourceRoot":""}