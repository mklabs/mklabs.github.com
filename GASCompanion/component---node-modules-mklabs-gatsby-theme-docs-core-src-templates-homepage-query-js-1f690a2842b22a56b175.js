(self.webpackChunkgas_companion_docs=self.webpackChunkgas_companion_docs||[]).push([[990],{47876:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return u}});t(67294);var i=t(22122),n=t(19756),l=t(64983),r={_frontmatter:{}};function m(e){var a=e.components,t=(0,n.Z)(e,["components"]);return(0,l.mdx)("wrapper",(0,i.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"gameplay-ability-system-companion",style:{position:"relative"}},(0,l.mdx)("a",{parentName:"h1",href:"#gameplay-ability-system-companion","aria-label":"gameplay ability system companion permalink",className:"anchor before"},(0,l.mdx)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Gameplay Ability System Companion"),(0,l.mdx)("p",null,"Leveraging the power of the Gameplay Ability System, this plugin provides a starting point and a robust foundation to speed up the creation and development of GAS-based projects."),(0,l.mdx)("p",null,"It includes the necessary C++ code and Blueprints to get started on a new project that aims to use Epic's GAS plugin (used namely in Fortnite and Paragon, and showcased in Action RPG project)"),(0,l.mdx)("p",null,(0,l.mdx)("a",{parentName:"p",href:"https://www.unrealengine.com/marketplace/en-US/product/gas-companion"},(0,l.mdx)("strong",{parentName:"a"},"Marketplace link"))," / ",(0,l.mdx)("a",{parentName:"p",href:"https://drive.google.com/file/d/18hlutBlXDPSYQHHSWwA6c40hMG4NJqOS/view"},(0,l.mdx)("strong",{parentName:"a"},"Playable Demo"))," / ",(0,l.mdx)("a",{parentName:"p",href:"https://drive.google.com/file/d/1O1WagrAwzmBZOza5_3RK-75l3pC071Vl/view"},(0,l.mdx)("strong",{parentName:"a"},"Example Project"))," / ",(0,l.mdx)("a",{parentName:"p",href:"https://github.com/mklabs/GASCompanion/issues"},(0,l.mdx)("strong",{parentName:"a"},"Issue Tracker"))),(0,l.mdx)("p",null,(0,l.mdx)("a",{parentName:"p",href:"/GASCompanion/getting-started"},"Get started now!")),(0,l.mdx)("h2",{id:"features",style:{position:"relative"}},(0,l.mdx)("a",{parentName:"h2",href:"#features","aria-label":"features permalink",className:"anchor before"},(0,l.mdx)("svg",{parentName:"a","aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),"Features"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Provided as a Plugin")," to easily share code between projects"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Blueprint Friendly"),", no need to dive into the cpp side, you can implement Abilities right away"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"C++ Friendly too!")," You can easily extend from the provided C++ class or modify the plugin source.",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"GAS Companion aims to be a general base for GAS powered projects without making any game design choices. The system is intended to be subclassed and customized per project needs."))),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Not Game specific")," The plugin doesn't make assumptions about your game design and decisions, and was built to be generic enough to be used in any kind of game."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Ability Queueing System")," Store failed abilities and re-trigger when the previous running ability ends, with a custom Debug Widget to visualize the state of the Queueing System"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Ignore Ability Cost for activation"),' Possibility to "loosely" check cost for Abilities, only checking for positive resource value, letting abilities activate even if attributes goes into negative values - but still prevents activation when value is 0 or below 0'),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"AttributeSet")," setup with most commonly used Attributes (Health, Stamina, Mana)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"ASC on PlayerState")," (for Player characters) or on Pawns (for AI / NPC Characters)"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"AI Tasks")," Activate Abilities by Tags or Class from Behavior Trees"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Custom AbilitySystemComponent and GameplayAbility"),(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"Activate abilities by Class / Tags and return the activated ability"),(0,l.mdx)("li",{parentName:"ul"},"Abilities with onAbilityEnded delegate (useful for Behavior Tree Tasks)"),(0,l.mdx)("li",{parentName:"ul"},"Abilities with Gameplay Effect Containers"))),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"Comprehensive Base Character"),(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"Getters for AttributeSet values"),(0,l.mdx)("li",{parentName:"ul"},"Support for startup Attributes, Effects and Abilities"),(0,l.mdx)("li",{parentName:"ul"},"Ability, Attributes and Character lifecycle Events",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},"OnAbilityActivated"),(0,l.mdx)("li",{parentName:"ul"},"OnAbilityEnded"),(0,l.mdx)("li",{parentName:"ul"},"OnAbilityFailed"),(0,l.mdx)("li",{parentName:"ul"},"OnRespawn"),(0,l.mdx)("li",{parentName:"ul"},"OnDamage"),(0,l.mdx)("li",{parentName:"ul"},"OnAttributeChange"),(0,l.mdx)("li",{parentName:"ul"},"OnHealthChange"),(0,l.mdx)("li",{parentName:"ul"},"OnStaminaChange"),(0,l.mdx)("li",{parentName:"ul"},"OnManaChange"))),(0,l.mdx)("li",{parentName:"ul"},"Ability System helpers (Ability activation, Checking for GameplayTags, ...)"))),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("strong",{parentName:"li"},"UI setup")," and basic HUDs provided")))}m.isMDXComponent=!0;var s=t(35771),o=t(60306),d=t(23431);function p(){return(0,d.tZ)(s.Z,null,(0,d.tZ)(o.Z,null),(0,d.tZ)(m,null))}var u=function(){return(0,d.tZ)(p,null)}}}]);
//# sourceMappingURL=component---node-modules-mklabs-gatsby-theme-docs-core-src-templates-homepage-query-js-1f690a2842b22a56b175.js.map