{"componentChunkName":"component---node-modules-mklabs-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/glossary","result":{"data":{"mdx":{"id":"21703e67-3310-5d79-a7f2-2d64f15d270f","excerpt":"Common GAS Acronyms Name Acronyms AbilitySystemComponent ASC AbilityTask AT Action RPG Sample Project by Epic ARPG, ARPG Sample CharacterMovementComponent CMCâ€¦","fields":{"slug":"/glossary/"},"frontmatter":{"title":"Glossary","description":"Common GAS Acronyms","image":null,"disableTableOfContents":true},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Glossary\",\n  \"description\": \"Common GAS Acronyms\",\n  \"disableTableOfContents\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Common GAS Acronyms\"))), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Acronyms\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"AbilitySystemComponent\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ASC\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"AbilityTask\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"AT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Action RPG Sample Project by Epic\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ARPG, ARPG Sample\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CharacterMovementComponent\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CMC\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GameplayAbility\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GA\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GameplayAbilitySystem\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GAS\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GameplayCue\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GC\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GameplayEffect\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GameplayEffectExecutionCalculation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ExecCalc, Execution\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GameplayTag\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tag, GT\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ModifierMagnitudeCalculation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ModMagCalc, MMC\")))), mdx(\"p\", null, \"From \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/tranek/GASDocumentation#10-common-gas-acronyms\"\n  }, \"GASDocumentation\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/glossary/","prev":{"label":"GSCUWHud","link":"/api/gscuw-hud"},"next":{"label":"GASDocumentation","link":"https://github.com/tranek/GASDocumentation"},"repositoryEditUrl":"https://github.com/GASCompanion/GASCompanion-Documentation/tree/dev\\src\\docs/glossary.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1849574859","2328931024","2501019404","973074209"]}