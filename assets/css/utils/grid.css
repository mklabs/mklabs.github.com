/*
 * Generated grid from @necolas' griddle
 *
 * > https://raw.github.com/necolas/griddle/master/css/example-mobile.css
 */

/* =============================================================================
   Grid
   ========================================================================== */
/*
 * Example uses:
 *
 * <div class="grid">
 *     <div class="grid__cell unit-1-2"></div>
 *     <div class="grid__cell unit-1-2"></div>
 *     <div class="grid__cell unit-1-3"></div>
 *     <div class="grid__cell unit-1-3 before-1-3"></div>
 * </div>
 *
 * <div class="grid grid--center">
 *     <div class="grid__cell unit-1-3"></div>
 *     <div class="grid__cell unit-1-3"></div>
 * </div>
 */
/* Grid core
   ========================================================================== */
/*
 * Grid container
 * Must only contain `.grid` or `.grid__cell` components as children.
 */

@media (min-width:30em) {

  .grid {
    display: block;
    padding: 0;
    margin: 0 -10px;
    /* Ensure consistent default alignment */
    text-align: left;
    /* Remove inter-unit whitespace for all non-monospace font-families
     * If you're using a monospace base font, you will need to set the `grid`
     * font-family to `sans-serif` and then redeclare the monospace font on
     * the `grid__cell` objects.
     */
    letter-spacing: -0.31em;
    word-spacing: -0.43em;
    /* Protect against WebKit bug with optimizelegibility */
    text-rendering: optimizespeed;
  }

  /*
   * Child `grid` object adjustments
   * Used for more complex fixed-fluid hybrid grids
   */
  .grid > .grid {
    overflow: hidden;
    margin-right: 0;
    margin-left: 0;
  }

  /*
   * Grid units
   * No explicit width by default. Apply `.unit-x-y` classes.
   */
  .grid__cell {
    width: 100%;
    display: inline-block;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    margin: 0;
    padding: 0 10px;
    /* controls vertical positioning of units */
    vertical-align: top;
    /* keeps unit content correctly aligned */
    text-align: left;
    /* reset text defaults */
    letter-spacing: normal;
    word-spacing: normal;
    text-rendering: auto;
  }

  /*
   * Modifier: horizontally center all grid units
   * Allows for automatic unit centering irrespective of the number of
   * units in the grid.
   */
  .grid--center {
    text-align: center;
  }

  /*
   * Modifier: horizontally center one unit
   * Set a specific unit to be horizontally centered. Doesn't affect
   * any other units. Can still contain a child `grid` object.
   */
  .grid__cell--center {
    display: block;
    margin: 0 auto;
  }

  /* 2, 3, 4 column grids */
  /* Proportional units
     ========================================================================== */
  /*
   * Specify the proportional width of an object.
   * Primarily for, but not limited to, use with `.grid__cell` components.
   * Intentional redundancy build into each set of unit classes.
   */
  .unit-1-2, .unit-2-4 {
    width: 50%;
  }

  .before-1-2, .before-2-4 {
    margin-left: 50%;
  }

  .unit-1-3 {
    width: 33.333%;
  }

  .before-1-3 {
    margin-left: 33.333%;
  }

  .unit-2-3 {
    width: 66.667%;
  }

  .before-2-3 {
    margin-left: 66.667%;
  }

  .unit-1-4 {
    width: 25%;
  }

  .before-1-4 {
    margin-left: 25%;
  }

  .unit-3-4 {
    width: 75%;
  }

  .before-3-4 {
    margin-left: 75%;
  }
}
