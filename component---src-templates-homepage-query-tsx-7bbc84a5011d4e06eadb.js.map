{"version":3,"sources":["webpack:///./src/components/homepage.tsx","webpack:///./src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-item.tsx","webpack:///./src/components/projects.tsx"],"names":["Homepage","props","projects","page","data","titleProps","useTrail","length","from","height","to","useSpring","config","slow","opacity","transform","contentProps","delay","sx","width","image","cover","childImageSharp","fluid","slim","position","bottom","left","right","maxWidth","margin","padding","zIndex","flexDirection","div","style","as","variant","textAlign","top","body","EmmaCoreProjects","allProject","nodes","ProjectItem","node","content","display","paddingTop","a","color","transition","textDecoration","slug","aria-label","title","alt","src","tracedSVG","filter","objectFit","backgroundColor","fontSize","fontWeight","client","service","isBrowser","window","categories","label","href","id","Projects","hash","location","slice","defaultCategory","find","category","useState","selected","setSelected","project","toLowerCase","trail","Fragment","data-testid","mt","mx","map","key","onClick","e","preventDefault","onCategoryClick","gridTemplateColumns","justifyContent","index"],"mappings":"wQAiFeA,EA1DE,SAACC,GAAyB,IAC/BC,EAA6BD,EAA7BC,SAAkBC,EAAWF,EAAnBG,KAAQD,KAOpBE,GALQC,YAASJ,EAASK,OAAQ,CACpCC,KAAM,CAAEC,OAAQ,MAChBC,GAAI,CAAED,OAAQ,UAGCE,YAAU,CACzBC,OAAQA,IAAOC,KACfL,KAAM,CAAEM,QAAS,EAAGC,UAAW,4BAC/BL,GAAI,CAAEI,QAAS,EAAGC,UAAW,2BAG3BC,EAAeL,YAAU,CAAEC,OAAQA,IAAOC,KAAMI,MAAO,IAAMT,KAAM,CAAEM,QAAS,GAAKJ,GAAI,CAAEI,QAAS,KAExG,OACI,YAAC,IAAD,CACII,GAAI,CACAC,MAAO,SAIX,YAAC,IAAD,CAAMC,MAAOjB,EAAKkB,MAAMC,gBAAgBC,MAAOC,MAAI,GAC/C,YAAC,IAAD,CACIN,GAAI,CACAO,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,MACVC,OAAQ,SACRrB,OAAQ,QACRsB,QAAS,EACTC,OAAQ,EACRC,cAAe,aAO3B,YAAC,IAAD,KACI,YAAC,IAASC,IAAV,CAAcC,MAAO9B,GACjB,YAAC,IAAD,CAAS+B,GAAG,KAAKC,QAAQ,YAAYnB,GAAI,CAAEoB,UAAW,SAAUb,SAAU,WAAYc,IAAK,WAA3F,qBAIJ,YAAC,IAASL,IAAV,CAAcC,MAAOnB,GACjB,YAAC,cAAD,KAAcb,EAAKqC,QAI3B,YAAC,IAAD,CAAUtC,SAAUA,MChEjB,SAASuC,EAAT,GAA+C,IAAhBxC,EAAgB,oBAEtCyC,EACZzC,EADIG,KAAQsC,WAGhB,OAAO,YAAC,EAAD,aAAUxC,SAAUwC,EAAWC,OAAW1C,M,gIC6F1C2C,G,UA3FK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMV,EAAT,EAASA,MAAT,OAClB,YAAC,IAASD,IAAV,CACEhB,GAAI,CACFO,SAAU,WACV,WAAY,CACVqB,QAAS,KACTC,QAAS,QACTC,WAAY,SAGhBb,MAAOA,GAEP,mBACEjB,GAAI,CACFS,KAAM,EACNlB,OAAQ,OACRgB,SAAU,WACVc,IAAK,EACLpB,MAAO,OACP8B,EAAG,CACDC,MAAO,QACPzC,OAAQ,OACRkB,KAAM,EACNb,QAAS,EACTiB,QAAS,EACTN,SAAU,WACVc,IAAK,EACLpB,MAAO,OACPa,OAAQ,GACRmB,WAAY,uBACZC,eAAgB,OAChB,UAAW,CACTF,MAAO,QACPpC,QAAS,EACTsC,eAAgB,WAKtB,mBACElC,GAAI,CACF,QAAS,CACPT,OAAQ,OACRkB,KAAM,EACNF,SAAU,sBACVc,IAAK,EACLpB,MAAO,OACP,QAAS,CACPM,SAAU,wBAKhB,YAAC,IAAD,CAAKF,MAAOsB,EAAKxB,MAAMC,gBAAgBC,SAEzC,YAAC,OAAD,CAAMb,GAAImC,EAAKQ,KAAMC,aAAA,uBAAmCT,EAAKU,OAC3D,mBACEC,IAAI,GACJC,IAAKZ,EAAKxB,MAAMC,gBAAgBC,MAAMmC,UACtCxC,GAAI,CACFO,SAAU,WACVc,IAAK,EACLZ,KAAM,EACNC,MAAO,EACPF,OAAQ,EACRP,MAAO,OACPV,OAAQ,OACRkD,OAAQ,eACR3B,QAAS,EACTlB,QAAS,IACT8C,UAAW,WAGf,mBACE1C,GAAI,CACF2C,gBAAiBhB,EAAKK,MACtBzC,OAAQ,OACRkB,KAAM,EACNF,SAAU,WACVc,IAAK,EACLpB,MAAO,OACPa,QAAS,KAGb,mBAAKd,GAAI,CAAE4C,SAAU,EAAGC,WAAY,SAAWlB,EAAKmB,QACpD,mBAAK9C,GAAI,CAAE4C,SAAU,IAAMjB,EAAKoB,cCjGlCC,EAA8B,oBAAXC,OAenBC,EAAa,CAAC,CAChBC,MAAO,iBACPvB,QAAS,MACTwB,KAAM,iBACNC,GAAI,OACL,CACCF,MAAO,mBACPvB,QAAS,mBACTwB,KAAM,qBACNC,GAAI,WACL,CACCF,MAAO,UACPvB,QAAS,UACTwB,KAAM,qBACNC,GAAI,WACL,CACCF,MAAO,uBACPvB,QAAS,MACTwB,KAAM,iBACNC,GAAI,QAmEOC,IAhEE,SAAC,GAAgC,IAA9BtE,EAA8B,EAA9BA,SACVuE,EAAOP,EAAYQ,SAASD,KAAKE,MAAM,GAAK,GAC5CC,EAAkBR,EAAWS,MAAK,SAAAC,GAAQ,OAAIL,IAASK,EAASP,MAFxB,EAGdQ,mBAASH,EAAkBA,EAAgBL,GAAK,WAAzES,EAHuC,KAG7BC,EAH6B,KAK7B,QAAbD,IACA9E,EAAWA,EAASyD,QAAO,SAAAuB,GAAO,OAAIA,EAAQJ,SAASK,gBAAkBH,MAG7E,IAAMI,EAAQ9E,YAASJ,EAASK,OAAQ,CACpCC,KAAM,CAAEC,OAAQ,MAChBC,GAAI,CAAED,OAAQ,UAQlB,OACI,YAAC,IAAM4E,SAAP,KACI,YAAC,IAAD,KACI,YAAC,IAAD,CAASjD,GAAG,KAAKC,QAAQ,YAAYnB,GAAI,CAAEoB,UAAW,WAAtD,YAIA,mBAAKgD,cAAY,sBAAsBpE,GAAI,CAAEqE,GAAI,EAAGtC,EAAG,CAAEuC,GAAI,GAAKlD,UAAW,WACxE8B,EAAWqB,KAAI,SAACX,GAAD,OACZ,YAAC,IAAD,CACIY,IAAKZ,EAASP,GACdjB,aAAYwB,EAAST,MACrBd,MAAOuB,EAAST,MAChBC,KAAMQ,EAASR,KACfqB,QAAS,SAACC,GAAD,OAnBT,SAACA,EAAGrB,GACxBU,EAAYV,GACZqB,EAAEC,iBAiBkCC,CAAgBF,EAAGd,EAASP,KAC5CrD,GAAI,CACAgC,MAAO,UACPa,WAAYe,EAASP,KAAOS,EAAW,IAAM,WAGhDF,EAAShC,cAM1B,YAAC,IAAD,CACI5B,GAAI,CACA6B,QAAS,OACTgD,oBAAqB,uCACrBC,eAAgB,SAChB7E,MAAO,OACPU,SAAU,OACVE,QAAS,WAIZqD,EAAMK,KAAI,SAACtD,EAAO8D,GAAR,OACP,YAAC,EAAD,CAAa9D,MAAOA,EAAOU,KAAM3C,EAAS+F,GAAQP,IAAKxF,EAAS+F,GAAO5C","file":"component---src-templates-homepage-query-tsx-7bbc84a5011d4e06eadb.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Flex, Heading, Container } from \"theme-ui\"\nimport { animated, useSpring, useTrail, config } from \"react-spring\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"@lekoarts/gatsby-theme-emma/src/components/layout\"\nimport { ChildImageSharp } from \"@lekoarts/gatsby-theme-emma/src/types\"\nimport Hero from \"@lekoarts/gatsby-theme-emma/src/components/hero\"\nimport Projects from \"./projects\"\n\n\ntype ProjectsProps = {\n    projects: {\n        color: string\n        slug: string\n        title: string\n        service: string\n        client: string\n        cover: ChildImageSharp\n        category: string\n    }[]\n    [key: string]: any\n}\n\nconst Homepage = (props: ProjectsProps) => {\n    const { projects, data: { page } } = props\n\n    const trail = useTrail(projects.length, {\n        from: { height: `0%` },\n        to: { height: `100%` },\n    })\n\n    const titleProps = useSpring({\n        config: config.slow,\n        from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n        to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n    })\n\n    const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n    return (\n        <Layout\n            sx={{\n                width: `100%`,\n            }}\n        >\n\n            <Hero image={page.cover.childImageSharp.fluid} slim>\n                <Flex\n                    sx={{\n                        position: `absolute`,\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        maxWidth: `5xl`,\n                        margin: `0 auto`,\n                        height: '800px',\n                        padding: 4,\n                        zIndex: 2,\n                        flexDirection: `column`,\n                    }}\n                >\n                </Flex>\n            </Hero>\n\n\n            <Container>\n                <animated.div style={titleProps}>\n                    <Heading as=\"h1\" variant=\"styles.h1\" sx={{ textAlign: 'center', position: 'absolute', top: '-100px' }}>\n                        Hi, I'm Mickael.\n                    </Heading>\n                </animated.div>\n                <animated.div style={contentProps}>\n                    <MDXRenderer>{page.body}</MDXRenderer>\n                </animated.div>\n            </Container>\n\n            <Projects projects={projects}/>\n        </Layout >\n    )\n}\n\nexport default Homepage","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Homepage from \"../components/homepage\"\n\ntype Props = {\n        data: {\n                allProject: any\n                [key: string]: string\n        }\n        [key: string]: any\n}\n\nexport default function EmmaCoreProjects({ ...props }: Props) {\n        const {\n                data: { allProject },\n        } = props\n\n        return <Homepage projects={allProject.nodes} {...props} />\n}\n\nexport const query = graphql`\n    query {\n        allProject: allPortfolioProject(sort: { fields: date, order: DESC }) {\n            nodes {\n                color\n                slug\n                service\n                client\n                title\n                category\n                cover {\n                    childImageSharp {\n                        fluid(maxWidth: 850, quality: 90, traceSVG: { color: \"#e6e6e6\" }) {\n                            ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                        }\n                    }\n                }\n            }\n        }\n\n        page(slug: { eq: \"/about\" }) {\n                title\n                slug\n                excerpt\n                body\n                cover {\n                    childImageSharp {\n                        fluid(maxWidth: 1920, quality: 90) {\n                            ...GatsbyImageSharpFluid_withWebp\n                        }\n                    }\n                }\n        }\n    }\n`","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Img from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { animated } from \"react-spring\"\nimport { ChildImageSharp } from \"../types\"\n\ntype ProjectItemProps = {\n  node: {\n    color: string\n    title: string\n    slug: string\n    service: string\n    client: string\n    cover: ChildImageSharp\n  }\n  style: any\n}\n\nconst ProjectItem = ({ node, style }: ProjectItemProps) => (\n  <animated.div\n    sx={{\n      position: `relative`,\n      \"&:before\": {\n        content: `\"\"`,\n        display: `block`,\n        paddingTop: `100%`,\n      },\n    }}\n    style={style}\n  >\n    <div\n      sx={{\n        left: 0,\n        height: `100%`,\n        position: `absolute`,\n        top: 0,\n        width: `100%`,\n        a: {\n          color: `white`,\n          height: `100%`,\n          left: 0,\n          opacity: 0,\n          padding: 4,\n          position: `absolute`,\n          top: 0,\n          width: `100%`,\n          zIndex: 10,\n          transition: `all 0.3s ease-in-out`,\n          textDecoration: `none`,\n          \"&:hover\": {\n            color: `white`,\n            opacity: 1,\n            textDecoration: `none`,\n          },\n        },\n      }}\n    >\n      <div\n        sx={{\n          \"> div\": {\n            height: `100%`,\n            left: 0,\n            position: `absolute !important`,\n            top: 0,\n            width: `100%`,\n            \"> div\": {\n              position: `static !important`,\n            },\n          },\n        }}\n      >\n        <Img fluid={node.cover.childImageSharp.fluid} />\n      </div>\n      <Link to={node.slug} aria-label={`View detail page of ${node.title}`}>\n        <img\n          alt=\"\"\n          src={node.cover.childImageSharp.fluid.tracedSVG}\n          sx={{\n            position: `absolute`,\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            width: `100%`,\n            height: `100%`,\n            filter: `invert(100%)`,\n            zIndex: -1,\n            opacity: 0.08,\n            objectFit: `cover`,\n          }}\n        />\n        <div\n          sx={{\n            backgroundColor: node.color,\n            height: `100%`,\n            left: 0,\n            position: `absolute`,\n            top: 0,\n            width: `100%`,\n            zIndex: -2,\n          }}\n        />\n        <div sx={{ fontSize: 5, fontWeight: `bold` }}>{node.client}</div>\n        <div sx={{ fontSize: 2 }}>{node.service}</div>\n      </Link>\n    </div>\n  </animated.div>\n)\n\nexport default ProjectItem\n","/** @jsx jsx */\nimport React, { useState } from \"react\"\nimport { ChildImageSharp } from \"@lekoarts/gatsby-theme-emma/src/types\"\nimport { useTrail } from \"react-spring\"\nimport { jsx, Heading, Container, Link } from \"theme-ui\"\nimport ProjectItem from \"@lekoarts/gatsby-theme-emma/src/components/project-item\"\n\nconst isBrowser = typeof window !== \"undefined\"\n\ntype ProjectsProps = {\n    projects: {\n        color: string\n        slug: string\n        title: string\n        service: string\n        client: string\n        category: string\n        cover: ChildImageSharp\n    }[]\n    [key: string]: any\n}\n\nconst categories = [{\n    label: \"All Categories\",\n    content: \"All\",\n    href: \"/portfolio#all\",\n    id: \"all\"\n}, {\n    label: \"Game Development\",\n    content: \"Game Development\",\n    href: \"/portfolio#gamedev\",\n    id: \"gamedev\"\n}, {\n    label: \"Modding\",\n    content: \"Modding\",\n    href: \"/portfolio#modding\",\n    id: \"modding\"\n}, {\n    label: \"Open Source Software\",\n    content: \"OSS\",\n    href: \"/portfolio#oss\",\n    id: \"oss\"\n}]\n\nconst Projects = ({ projects }: ProjectsProps) => {\n    const hash = isBrowser ? location.hash.slice(1) : \"\"\n    const defaultCategory = categories.find(category => hash === category.id)\n    const [selected, setSelected] = useState(defaultCategory ? defaultCategory.id : \"gamedev\");\n\n    if (selected !== \"all\") {\n        projects = projects.filter(project => project.category.toLowerCase() === selected)\n    }\n\n    const trail = useTrail(projects.length, {\n        from: { height: `0%` },\n        to: { height: `100%` },\n    })\n\n    const onCategoryClick = (e, id) => {\n        setSelected(id)\n        e.preventDefault()\n    }\n\n    return (\n        <React.Fragment>\n            <Container>\n                <Heading as=\"h1\" variant=\"styles.h1\" sx={{ textAlign: 'center' }}>\n                    Projects\n                </Heading>\n\n                <div data-testid=\"projects-categories\" sx={{ mt: 4, a: { mx: 2 }, textAlign: 'center' }}>\n                    {categories.map((category) => (\n                        <Link\n                            key={category.id}\n                            aria-label={category.label}\n                            title={category.label}\n                            href={category.href}\n                            onClick={(e) => onCategoryClick(e, category.id)}\n                            sx={{ \n                                color: \"primary\",\n                                fontWeight: category.id === selected ? 700 : \"normal\"\n                            }}\n                        >\n                            {category.content}\n                        </Link>\n                    ))}\n                </div>\n            </Container>\n\n            <Container\n                sx={{\n                    display: `grid`,\n                    gridTemplateColumns: `repeat(auto-fit, minmax(280px, 20%))`,\n                    justifyContent: `center`,\n                    width: `100%`,\n                    maxWidth: `100%`,\n                    padding: `2rem 0`\n\n                }}\n            >\n                {trail.map((style, index) => (\n                    <ProjectItem style={style} node={projects[index]} key={projects[index].slug} />\n                ))}\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Projects"],"sourceRoot":""}